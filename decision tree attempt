import csv
import matplotlib.pyplot as plt
import numpy as np

my_data = csv.DictReader(open("train.csv"))

import pandas as pd
df = pd.read_csv('train.csv', sep=',', quotechar='"')
df.values

result = df["Survived"]
criteria = [col_Age, col_Fare, col_Pclass, col_Sex]
col_Survived = list(df.Survived)
col_Sex = list(df.Sex)
col_Pclass = list(df.Pclass)
col_Age = list(df.Age)
col_Fare = list(df.Fare)

def calcgini(a1, a2, b1, b2):
    gini_1 = 1 - np.square(a1/(a1 + a2)) - np.square(a2/(a1 + a2))
    gini_2 = 1 - np.square(b1/(b1 + b2)) - np.square(b2/(b1 + b2))
    acc = ((a1 + a2)/(a1+a2+b1+b2)) * gini_1 + ((b1 + b2)/(a1+a2+b1+b2)) * gini_2
    return acc


def datatype(csvcolumn):
    datatype = []
    for x in csvcolumn:
        if csvcolumn[x].dtype != "O":
            datatype.append("numbers")
        else:
            if csvcolumn[x].nunique() <= 2:
                datatype.append("binary")
            else:
                datatype.append("other")
    return datatype

# depth = 1
# for i in range(depth):

node2 = []

def identifydata(criteria):
    datatypes =[]
    for i in range(len(criteria)):
        if criteria[i] not in datatypes:
            datatypes.append(criteria[i])
    return datatypes

def getnum(bingo):
    if datatype(bingo) == 'binary':
        a =[]
        b=[]
        a1 =a.count(1)
        a2 =a.count(0)
        b1 =b.count(1)
        b2 =b.count(0)
        for i in range(len(bingo)):
            if bingo[i] == 0:
                a.append(bingo[i])
            if bingo[i] == 1:
                b.append(result[i])
        return a1, a2, b1, b2
    elif datatype(bingo) == 'other':
        datatypes = identifydata(bingo)
        ginivalues =[]
        for data in datatypes:
            a = []
            b = []
            a1 = a.count(1)
            a2 = a.count(0)
            b1 = b.count(1)
            b2 = b.count(0)
            for i in range(len(bingo)):
                if bingo[i] == data:
                    a.append(bingo[i])
                if bingo[i] == data:
                    b.append(result[i])
            ginivalues.append(calcgini(a1, a2, b1, b2))
        ginivalues.sort()
        lowestgini = ginivalues[0]
        return lowestgini

def comparegini():
    ginilist = []*len(criteria)
    for x in criteria:
        

def createsplit():
    

# rootnode = sex
